// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/douyin/test": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "测试接口"
                ],
                "summary": "测试",
                "responses": {}
            }
        },
        "/douyin/user/register": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "注册接口"
                ],
                "summary": "用户账号密码注册接口",
                "parameters": [
                    {
                        "description": "注册的用户名和密码",
                        "name": "RegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "$ref": "#/definitions/code.Error"
                        }
                    },
                    "500": {
                        "description": "内部错误",
                        "schema": {
                            "$ref": "#/definitions/code.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "code.Error": {
            "type": "object"
        },
        "model.User": {
            "type": "object",
            "properties": {
                "bg_img": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "create_time": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_del": {
                    "type": "integer"
                },
                "mobile": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "sex": {
                    "type": "integer"
                },
                "update_time": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "service.RegisterRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 4
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "抖声",
	Description:      "青训营项目 · 组名 - 大师我悟了",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
